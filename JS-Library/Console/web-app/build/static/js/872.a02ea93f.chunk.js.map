{"version":3,"file":"static/js/872.a02ea93f.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  Loader,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ApiError } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const ILM_TYPES = [\n    { value: \"expiry\", label: \"Expiry\" },\n    { value: \"transition\", label: \"Transition\" },\n  ];\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersListNames()\n        .then((res) => {\n          const tiersList: string[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tierName: string) => {\n              return { label: tierName, value: tierName };\n            });\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [dispatch, loadingTiers, lifecycleRule.transition?.storage_class]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (\n        (transitionDays !== \"0\" && storageClass === \"\") ||\n        (NCTransitionDays !== \"0\" && NCTransitionSC === \"\")\n      ) {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [\n    ilmType,\n    expiryDays,\n    transitionDays,\n    storageClass,\n    NCTransitionDays,\n    NCTransitionSC,\n  ]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setExpiredAllVersionsDM(!!lifecycleRule.expiration?.delete_all);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.transition?.days &&\n          lifecycleRule.transition?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(transitionDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.transition?.noncurrent_transition_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCTransitionDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        expired_object_delete_all: expiredAllVersionsDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch(async (eRes) => {\n          setAddLoading(false);\n          const err = (await eRes.json()) as ApiError;\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {!loadingTiers ? (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            saveRecord(e);\n          }}\n        >\n          <FormLayout containerPadding={false} withBorders={false}>\n            <Switch\n              label=\"Status\"\n              indicatorLabels={[\"Enabled\", \"Disabled\"]}\n              checked={enabled}\n              value={\"user_enabled\"}\n              id=\"rule_status\"\n              name=\"rule_status\"\n              onChange={(e) => {\n                setEnabled(e.target.checked);\n              }}\n            />\n            <InputBox\n              id=\"id\"\n              name=\"id\"\n              label=\"Id\"\n              value={lifecycleRule.id}\n              onChange={() => {}}\n              disabled\n            />\n            {ilmType ? (\n              <RadioGroup\n                currentValue={ilmType}\n                id=\"rule_type\"\n                name=\"rule_type\"\n                label=\"Rule Type\"\n                selectorOptions={ILM_TYPES}\n                onChange={() => {}}\n                disableOptions\n              />\n            ) : null}\n\n            <InputBox\n              id=\"object-version\"\n              name=\"object-version\"\n              label=\"Object Version\"\n              value={objectVersion}\n              onChange={() => {}}\n              disabled\n            />\n\n            {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n              <InputBox\n                type=\"number\"\n                id=\"expiry_days\"\n                name=\"expiry_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setExpiryDays(e.target.value);\n                }}\n                label=\"Expiry Days\"\n                value={expiryDays}\n                min=\"0\"\n              />\n            )}\n\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_expiration_days\"\n                  name=\"noncurrentversion_expiration_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCExpirationDays(e.target.value);\n                  }}\n                  label=\"Non-current Expiration Days\"\n                  value={NCExpirationDays}\n                  min=\"0\"\n                />\n              )}\n            {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"transition_days\"\n                  name=\"transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setTransitionDays(e.target.value);\n                  }}\n                  label=\"Transition Days\"\n                  value={transitionDays}\n                  min=\"0\"\n                />\n                <Select\n                  label=\"Tier\"\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  value={storageClass}\n                  onChange={(value) => {\n                    setStorageClass(value);\n                  }}\n                  options={tiersList}\n                />\n              </Fragment>\n            )}\n\n            {ilmType === \"transition\" &&\n              lifecycleRule.transition?.noncurrent_transition_days && (\n                <Fragment>\n                  <InputBox\n                    type=\"number\"\n                    id=\"noncurrentversion_transition_days\"\n                    name=\"noncurrentversion_transition_days\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setNCTransitionDays(e.target.value);\n                    }}\n                    label=\"Non-current Transition Days\"\n                    value={NCTransitionDays}\n                    min=\"0\"\n                  />\n                  <Select\n                    label=\"Non-current Version Transition Storage Class\"\n                    id=\"noncurrentversion_t_SC\"\n                    name=\"noncurrentversion_t_SC\"\n                    value={NCTransitionSC}\n                    onChange={(value) => {\n                      setNCTransitionSC(value);\n                    }}\n                    options={tiersList}\n                  />\n                </Fragment>\n              )}\n            <Grid item xs={12}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <InputBox\n                  id=\"prefix\"\n                  name=\"prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPrefix(e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={prefix}\n                />\n                <QueryMultiSelector\n                  name=\"tags\"\n                  label=\"Tags\"\n                  elements={tags}\n                  onChange={(vl: string) => {\n                    setTags(vl);\n                  }}\n                  keyPlaceholder=\"Tag Key\"\n                  valuePlaceholder=\"Tag Value\"\n                  withBorder\n                />\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" &&\n              lifecycleRule.expiration?.noncurrent_expiration_days && (\n                <Grid item xs={12}>\n                  <Accordion\n                    title={\"Advanced\"}\n                    id={\"lifecycle-advanced-filters\"}\n                    expanded={expandedAdv}\n                    onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                    sx={{ marginTop: 15 }}\n                  >\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expired All Versions\"}\n                    />\n                  </Accordion>\n                </Grid>\n              )}\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"cancel\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      ) : (\n        <Loader style={{ width: 16, height: 16 }} />\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AlertIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpTip,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [expiryUnit, setExpiryUnit] = useState<string>(\"days\");\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersListNames()\n        .then((res) => {\n          const tiersList: string[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tierName: string) => {\n              return { label: tierName, value: tierName };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [dispatch, loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    if (!lifecycleDays || parseInt(lifecycleDays) === 0) {\n      valid = false;\n    }\n    if (parseInt(lifecycleDays) > 2147483647) {\n      //values over int32 cannot be parsed\n      valid = false;\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else if (expiryUnit === \"days\") {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"newer_noncurrentversion_expiration_versions\"] =\n          parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else if (expiryUnit === \"days\") {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      expired_object_delete_all: expiredAllVersionsDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of Lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n              helpTip={\n                <Fragment>\n                  Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html\"\n                  >\n                    Expiry\n                  </a>{\" \"}\n                  to delete Objects per this rule. Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-minio.html\"\n                  >\n                    Transition\n                  </a>{\" \"}\n                  to move Objects to a remote storage{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/windows/administration/object-management/transition-objects-to-minio.html#configure-the-remote-storage-tier\"\n                  >\n                    Tier\n                  </a>{\" \"}\n                  per this rule.\n                </Fragment>\n              }\n              helpTipPlacement=\"right\"\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n                helpTip={\n                  <Fragment>\n                    Select whether to apply the rule to current or non-current\n                    Object\n                    <a\n                      target=\"blank\"\n                      href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html#expire-versioned-objects\"\n                    >\n                      {\" \"}\n                      Versions\n                    </a>\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n\n            <InputBox\n              error={\n                lifecycleDays && !isFormValid\n                  ? parseInt(lifecycleDays) <= 0\n                    ? `Number of ${expiryUnit} to retain must be greater than zero`\n                    : parseInt(lifecycleDays) > 2147483647\n                      ? `Number of ${expiryUnit} must be less than or equal to 2147483647`\n                      : \"\"\n                  : \"\"\n              }\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <Fragment>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <InputUnitMenu\n                      id={\"expire-current-unit\"}\n                      unitSelected={expiryUnit}\n                      unitsList={[\n                        { label: \"Days\", value: \"days\" },\n                        { label: \"Versions\", value: \"versions\" },\n                      ]}\n                      disabled={\n                        targetVersion !== \"noncurrent\" || ilmType !== \"expiry\"\n                      }\n                      onUnitChange={(newValue) => {\n                        setExpiryUnit(newValue);\n                      }}\n                    />\n                    {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                      <HelpTip\n                        content={\n                          <Fragment>\n                            Select to set expiry by days or newer noncurrent\n                            versions\n                          </Fragment>\n                        }\n                        placement=\"right\"\n                      >\n                        {\" \"}\n                        <AlertIcon style={{ width: 15, height: 15 }} />\n                      </HelpTip>\n                    )}\n                  </Grid>\n                </Fragment>\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n                helpTip={\n                  <Fragment>\n                    Configure a{\" \"}\n                    <a\n                      href={IAM_PAGES.TIERS_ADD}\n                      color=\"secondary\"\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      remote tier\n                    </a>{\" \"}\n                    to receive transitioned Objects\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <Grid item xs={12}>\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Grid item xs={12}>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expire Delete Marker\"}\n                      description={\n                        \"Remove the reference to the object if no versions are left\"\n                      }\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expire All Versions\"}\n                      description={\n                        \"Removes all the versions of the object already expired\"\n                      }\n                    />\n                  </Grid>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n  HelpTip,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 ||\n            el.expiration.noncurrent_expiration_days ||\n            (el.expiration.newer_noncurrent_expiration_versions &&\n              el.expiration.newer_noncurrent_expiration_versions > 0))\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (\n            el.expiration.noncurrent_expiration_days ||\n            el.expiration.newer_noncurrent_expiration_versions\n          ) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Expire Delete Marker\",\n      elementKey: \"expire_delete_marker\",\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration && el.expiration.delete_marker !== undefined) {\n          return <span>{el.expiration.delete_marker ? \"true\" : \"false\"}</span>;\n        } else {\n          return <Fragment />;\n        }\n      },\n      renderFullObject: true,\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          } else {\n            return (\n              <span>\n                {el.expiration.newer_noncurrent_expiration_versions} versions\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        <HelpTip\n          content={\n            <Fragment>\n              MinIO derives it’s behavior and syntax from{\" \"}\n              <a\n                target=\"blank\"\n                href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\"\n              >\n                S3 lifecycle\n              </a>{\" \"}\n              for compatibility in migrating workloads and lifecycle rules from\n              S3 to MinIO.\n            </Fragment>\n          }\n          placement=\"right\"\n        >\n          Lifecycle Rules\n        </HelpTip>\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n"],"names":["_ref","onCloseAndRefresh","deleteOpen","bucket","id","dispatch","useAppDispatch","deletingRule","setDeletingRule","useState","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_jsxs","Fragment","children","_lifecycleRule$transi2","_lifecycleRule$expira8","_lifecycleRule$expira9","_lifecycleRule$transi10","_lifecycleRule$transi11","_lifecycleRule$expira10","closeModalAndRefresh","selectedBucket","lifecycleRule","open","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","expiredAllVersionsDM","setExpiredAllVersionsDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","expandedAdv","setExpandedAdv","expanded","setExpanded","admin","tiersListNames","res","get","data","length","objList","map","tierName","label","value","_lifecycleRule$transi","transition","storage_class","setModalErrorSnackMessage","valid","_lifecycleRule$expira3","_lifecycleRule$expira4","status","transitionMode","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$expira","_lifecycleRule$expira2","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","noncurrent_storage_class","delete_marker","delete_all","tgs","reduce","stringLab","currItem","index","concat","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","Loader","style","width","height","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira5","_lifecycleRule$expira6","_lifecycleRule$expira7","expiry","parseInt","_lifecycleRule$transi7","_lifecycleRule$transi8","_lifecycleRule$transi9","lifecycleUpdate","type","disable","expired_object_delete_marker","expired_object_delete_all","updateBucketLifecycle","async","eRes","json","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","disabled","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","options","Grid","item","xs","Accordion","onTitleClick","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","sx","marginTop","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","expiryUnit","setExpiryUnit","formFieldRowFilter","padding","getBucketVersioning","container","addRecord","lifecycleInsert","addBucketLifecycle","helpTip","href","helpTipPlacement","validity","pattern","overlayObject","justifyContent","InputUnitMenu","unitSelected","unitsList","onUnitChange","newValue","HelpTip","content","placement","AlertIcon","IAM_PAGES","TIERS_ADD","textDecoration","description","BucketLifecyclePanel","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","newer_noncurrent_expiration_versions","elementKey","undefined","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","rel","UnitMenuButton","styled","button","theme","border","borderRadius","backgroundColor","fontSize","_ref2","anchorEl","setAnchorEl","React","Boolean","handleClose","newUnit","currentTarget","DropdownSelector","selectedOption","onSelect","hideTriggerAction","anchorOrigin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","className","placeholder","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","HelpIcon","overflowY","position","ref","wideLimit","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed"],"sourceRoot":""}