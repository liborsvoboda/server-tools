{"version":3,"file":"static/js/2166.880cc038.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { HelpBox, Box, Grid, breakPoints } from \"mds\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                [`@media (max-width: ${breakPoints.sm}px)`]: {\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                },\n              }}\n            >\n              <span>\n                This feature is not available for a single-disk setup.&nbsp;\n              </span>\n              <span>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://min.io/docs/minio/linux/operations/install-deploy-manage/deploy-minio-multi-node-multi-drive.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </span>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  FormLayout,\n  HelpBox,\n  InputBox,\n  InspectMenuIcon,\n  PageLayout,\n  PasswordKeyIcon,\n  Switch,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport {\n  deleteCookie,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport {\n  selDistSet,\n  setErrorSnackMessage,\n  setHelpName,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { registeredCluster } from \"../../../config\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport KeyRevealer from \"./KeyRevealer\";\nimport RegisterCluster from \"../Support/RegisterCluster\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst ExampleBlock = ({\n  volumeVal,\n  pathVal,\n}: {\n  volumeVal: string;\n  pathVal: string;\n}) => {\n  return (\n    <Box className=\"code-block-container\">\n      <Box className=\"example-code-block\">\n        <Box\n          sx={{\n            display: \"flex\",\n            marginBottom: \"5px\",\n            flexFlow: \"row\",\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              flexFlow: \"column\",\n            },\n          }}\n        >\n          <label>Volume/bucket Name :</label> <code>{volumeVal}</code>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexFlow: \"row\",\n            [`@media (max-width: ${breakPoints.sm}px)`]: {\n              flexFlow: \"column\",\n            },\n          }}\n        >\n          <label>Path : </label>\n          <code>{pathVal}</code>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst Inspect = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const distributedSetup = useSelector(selDistSet);\n\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n  const clusterRegistered = registeredCluster();\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    let basename = document.baseURI.replace(window.location.origin, \"\");\n    const urlOfInspectApi = `${basename}/api/v1/admin/inspect?volume=${encodeURIComponent(volumeName)}&file=${encodeURIComponent(inspectPath)}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          dispatch(\n            setErrorSnackMessage({\n              errorMessage: resErr.message,\n              detailedError: resErr.code,\n            }),\n          );\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        dispatch(setErrorSnackMessage(err));\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"inspect\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label={\"Inspect\"} actions={<HelpMenu />} />\n\n      <PageLayout>\n        {!clusterRegistered && <RegisterCluster compactMode />}\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <FormLayout\n            helpBox={\n              <HelpBox\n                title={\"Learn more about the Inspect feature\"}\n                iconComponent={<InspectMenuIcon />}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"16px\",\n                        fontWeight: 600,\n                        fontStyle: \"italic\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      Examples:\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        fontSize: \"14px\",\n                        flex: \"2\",\n\n                        \"& .step-row\": {\n                          fontSize: \"14px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n\n                          \"&.step-text\": {\n                            fontWeight: 400,\n                          },\n                          \"&:before\": {\n                            content: \"' '\",\n                            height: \"7px\",\n                            width: \"7px\",\n                            backgroundColor: \"#2781B0\",\n                            marginRight: \"10px\",\n                            marginTop: \"7px\",\n                            flexShrink: 0,\n                          },\n                        },\n\n                        \"& .code-block-container\": {\n                          flex: \"1\",\n                          marginTop: \"15px\",\n                          marginLeft: \"35px\",\n\n                          \"& input\": {\n                            color: \"#737373\",\n                          },\n                        },\n\n                        \"& .example-code-block label\": {\n                          display: \"inline-block\",\n                          width: 160,\n                          fontWeight: 600,\n                          fontSize: 14,\n                          [`@media (max-width: ${breakPoints.sm}px)`]: {\n                            width: \"100%\",\n                          },\n                        },\n\n                        \"& code\": {\n                          width: 100,\n                          paddingLeft: \"10px\",\n                          fontFamily: \"monospace\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"3px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          border: \"1px solid #eaeaea\",\n                          fontSize: \"10px\",\n                          fontWeight: 500,\n                          [`@media (max-width: ${breakPoints.sm}px)`]: {\n                            width: \"100%\",\n                          },\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test-bucket`}\n                        />\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test*/*/part.*`}\n                        />\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n                        <ExampleBlock\n                          pathVal={`test*/xl.meta`}\n                          volumeVal={`test/**`}\n                        />\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                        marginLeft: \"15px\",\n                        fontSize: \"14px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            }\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                e.preventDefault();\n                if (!clusterRegistered) {\n                  navigate(\"/support/register\");\n                  return;\n                }\n                performInspect();\n              }}\n            >\n              <InputBox\n                id=\"inspect_volume\"\n                name=\"inspect_volume\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setVolumeName(e.target.value);\n                }}\n                label=\"Volume or Bucket Name\"\n                value={volumeName}\n                error={volumeError}\n                required\n                placeholder={\"test-bucket\"}\n                disabled={!clusterRegistered}\n              />\n              <InputBox\n                id=\"inspect_path\"\n                name=\"inspect_path\"\n                error={pathError}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setInspectPath(e.target.value);\n                }}\n                label=\"File or Path to inspect\"\n                value={inspectPath}\n                required\n                placeholder={\"test*/xl.meta\"}\n                disabled={!clusterRegistered}\n              />\n              <Switch\n                label=\"Encrypt\"\n                indicatorLabels={[\"True\", \"False\"]}\n                checked={isEncrypt}\n                value={\"true\"}\n                id=\"inspect_encrypt\"\n                name=\"inspect_encrypt\"\n                onChange={() => {\n                  setIsEncrypt(!isEncrypt);\n                }}\n                disabled={!clusterRegistered}\n              />\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                  marginTop: \"55px\",\n                }}\n              >\n                <Button\n                  id={\"inspect-clear-button\"}\n                  style={{\n                    marginRight: \"15px\",\n                  }}\n                  type=\"button\"\n                  variant=\"regular\"\n                  data-test-id=\"inspect-clear-button\"\n                  onClick={resetForm}\n                  label={\"Clear\"}\n                  disabled={!clusterRegistered}\n                />\n                <Button\n                  id={\"inspect-start\"}\n                  type=\"submit\"\n                  variant={!clusterRegistered ? \"regular\" : \"callAction\"}\n                  data-test-id=\"inspect-submit-button\"\n                  disabled={!isFormValid || !clusterRegistered}\n                  label={\"Inspect\"}\n                />\n              </Box>\n            </form>\n          </FormLayout>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <Fragment>\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <form\n                noValidate\n                onSubmit={() => {\n                  return false;\n                }}\n              >\n                <KeyRevealer value={decryptionKey} />\n              </form>\n            </Fragment>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Inspect;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport { Button, CopyIcon, InputBox, Box, breakPoints } from \"mds\";\n\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = useState<boolean>(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: \"row\",\n        [`@media (max-width: ${breakPoints.sm}px)`]: {\n          flexFlow: \"column\",\n        },\n      }}\n    >\n      <InputBox\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        readOnly={true}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        id={\"show-hide-key\"}\n        style={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"callAction\"\n        onClick={() => setShown(!shown)}\n        label={\"Show/Hide\"}\n      />\n    </Box>\n  );\n};\n\nexport default KeyRevealer;\n"],"names":["_ref","iconComponent","entity","_jsx","Grid","container","children","item","xs","HelpBox","title","concat","help","_jsxs","Box","sx","fontSize","breakPoints","sm","display","flexFlow","href","target","rel","ExampleBlock","volumeVal","pathVal","className","marginBottom","Inspect","dispatch","useAppDispatch","navigate","useNavigate","distributedSetup","useSelector","selDistSet","volumeName","setVolumeName","useState","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","clusterRegistered","registeredCluster","useEffect","isVolValid","isPathValid","trim","length","slice","isValid","performInspect","async","basename","document","baseURI","replace","window","location","origin","fetch","url","method","makeRequest","encodeURIComponent","then","res","ok","resErr","json","setErrorSnackMessage","errorMessage","message","detailedError","code","blob","filename","headers","get","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","setHelpName","Fragment","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","RegisterCluster","compactMode","FormLayout","helpBox","InspectMenuIcon","marginTop","fontWeight","fontStyle","flex","content","height","width","backgroundColor","marginRight","flexShrink","marginLeft","color","paddingLeft","fontFamily","paddingRight","paddingTop","paddingBottom","borderRadius","border","noValidate","autoComplete","onSubmit","e","preventDefault","InputBox","id","name","onChange","value","error","required","placeholder","disabled","Switch","indicatorLabels","checked","alignItems","justifyContent","Button","style","type","variant","onClick","DistributedOnly","ModalWrapper","modalOpen","onClose","onCloseDecKeyModal","deleteCookie","titleIcon","PasswordKeyIcon","KeyRevealer","shown","setShown","overlayIcon","CopyIcon","readOnly","overlayAction","navigator","clipboard","writeText"],"sourceRoot":""}